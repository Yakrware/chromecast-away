{"name":"Chromecast-away","tagline":"A friendly wrapper for the Chromecast, no relation to Tom Hanks","body":"\r\n=====================\r\n\r\nA nice, friendly wrapper for Chromecast that doesn't judge you and always sends thank you cards upon receiving something nice from a friend because it appreciates emotional responses.\r\n\r\n_Still in heavy development._\r\n\r\nSupports:\r\n\r\n* Playing via default media receiver\r\n* Playing via custom media receiver (Coming Soon)\r\n* Displaying HTML via custom receiver (Coming Soon)\r\n\r\nImportant Notes:\r\n\r\n* Register your chromecast's ID number [with Google](https://developers.google.com/cast/docs/registration#RegisterDevice)\r\n* Configure your chromecast to send it's ID number via the Chromecast app on your telephone\r\n* You must include Google's [official js script](https://www.gstatic.com/cv/js/sender/v1/cast_sender.js) on the page\r\n* The [Chromecast extension](https://chrome.google.com/webstore/detail/google-cast/boadgeojelhgndaghljhdicfkmllpafd?hl=en) is required as it will pop open when users try to cast.\r\n* Here's all the [official docs](https://developers.google.com/cast/docs/developers)\r\n\r\nPlaying via default media receiver\r\n------------------------\r\n\r\nWant to just play media (music, video, photos) right now with some baked in support for displaying basic metadata about the content?\r\n\r\n```coffee\r\ncastAway = new CastAway()\r\n\r\ncastAway.on 'receivers:available', ->\r\n  # receivers available, safe to request a session\r\n\r\n  castAway.requestSession\r\n    success: (session) ->\r\n      config =\r\n        url: 'https://s3.amazonaws.com/...mp3'\r\n        contentType: 'audio/mpeg'\r\n        artist: 'Will Smith'\r\n        images: [\"http://www.willy-smith.com/men-in-black....jpg\"]\r\n\r\n      # Also available: '.photo', '.movie', '.tvShow' ... see examples\r\n      session.music config,\r\n        success: (controls) ->\r\n          # Interact with the media via controls\r\n          $('.pause').click (ev) -> controls.pause()\r\n          $('.play').click (ev) -> controls.play()\r\n          $('.stop').click (ev) -> controls.stop()\r\n          $('.release').click (ev) -> session.release()\r\n\r\n          # will emit the following events...\r\n          session.on 'pause', -> # media paused\r\n          session.on 'play', -> # media playing\r\n          session.on 'stop', -> # media stopped\r\n          session.on 'seek', -> # media seeking\r\n          session.on 'error', -> # media errored\r\n          session.on 'idle', -> # media idle\r\n          session.on 'load', -> # media loading\r\n\r\n        error: (data) ->\r\n          # Error loading media\r\n\r\n    error: ->\r\n      # error starting session (user canceled it)\r\n\r\ncastAway.on 'receivers:unavailable', ->\r\n  # No receivers found\r\n\r\ncastAway.on 'existingMediaFound', (session, controls) ->\r\n  # found existing media session, interact with it via\r\n  # the passed session and controls.\r\n\r\ncastAway.initialize\r\n  success: (data) ->\r\n    # successfully initialized, party\r\n  error: (data) ->\r\n    # unsuccessfully initialized, cry\r\n```\r\n\r\nPlaying via custom media receiver\r\n------------------------\r\n\r\nWant all the baked in goodness of the default media receiver, but your own custom look via CSS?\r\n\r\n```js\r\n  # Coming soon\r\n```\r\n\r\nDisplaying HTML via custom receiver\r\n------------------------\r\n\r\nWant send HTML/CSS/JS to a chromecast and do everything yourself to impress your friends and win influence?\r\n\r\n```coffee\r\n  # Coming soon!\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}